name: Release Geolistrik CLI

on:
  push:
    tags:
      - 'v*.*.*' # Trigger saat push tag versi, misal v1.0.0

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    env:
      REPO: vysf/geolistrik-cli
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set VERSION from tag
        run: |
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka matplotlib pandas numpy rich python-dotenv

      - name: Build CLI with Nuitka
        shell: cmd
        run: |
          nuitka --standalone --onefile --assume-yes-for-downloads ^
                 --enable-plugin=pylint-warnings ^
                 --enable-plugin=no-qt ^
                 --include-package=geolistrik ^
                 --windows-icon-from-ico=assets/icon.ico ^
                 --output-dir=build ^
                 geolistrik/__main__.py

      - name: Setup Inno Setup
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.0
        with:
          path: "C:\\Program Files (x86)\\Inno Setup 6"

      - name: Replace version in ISS
        run: |
          $version = "${{ github.ref_name }}"
          (Get-Content geolistrik_setup.iss) -replace "{{VERSION}}", $version | Set-Content geolistrik_setup.iss

      - name: Build installer with Inno Setup
        run: iscc geolistrik_setup.iss

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: geolistriksetup-${{ env.VERSION }}.exe
          path: output/geolistriksetup-${{ env.VERSION }}.exe

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    env:
      REPO: vysf/geolistrik-cli
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set VERSION from tag
        run: |
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka matplotlib pandas numpy rich python-dotenv

      - name: Build CLI with Nuitka
        run: |
          nuitka --standalone --onefile \
                 --enable-plugin=pylint-warnings \
                 --enable-plugin=no-qt \
                 --include-package=geolistrik \
                 --output-dir=build \
                 geolistrik/__main__.py
          mv build/__main__.bin geolistrik-linux-${VERSION}

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: geolistrik-linux-${{ env.VERSION }}
          path: geolistrik-linux-${{ env.VERSION }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-files

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-files/geolistriksetup-*.exe
            release-files/geolistrik-linux-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
